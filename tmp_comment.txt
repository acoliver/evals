Add detailed implementation specifications based on actual codebase analysis:

## Path Specifications
- **CLI Runtime**: commandResults.find(cmd => cmd.name === 'llxprt' || cmd.name === 'codex')?.durationMs
- **Regex Results**: grading/regex-challenge/results/{validators,transformations,puzzles}.json  
- **Archive Storage**: evals/results/regex-challenge-TIMESTAMP/profile/workspace/

## JSON Formats Confirmed
- **Regex Test Files**: [{"taskId": "string", "passed": boolean}, ...]
- **CommandResult**: {durationMs, exitCode, command, name, ...}

## Fast-Fail Requirements
- CLI duration < 1000ms = Throw error "CLI must run for >1 second"
- Missing vybes config = Default to {multiplier: 3, timeLimitMinutes: 6}  
- Missing regex JSON files = Graceful degradation to pass/fail

## Integration Points  
- Insert calculation in runRegexChallenge.ts after agent command completion
- Extend existing EvalRunResult interface with vybesScore field
- Error handling uses try/catch without breaking evaluation flow

## Error Handling Strategy
- Invalid duration = Continue without score, log warning
- Missing files = Skip affected calculations, continue  
- Configuration errors = Use defaults, continue